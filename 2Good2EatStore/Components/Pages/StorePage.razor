@page "/store/"
@using _2Good2EatStore.Data
@rendermode InteractiveServer
@inject ApplicationDbContext dbContext

<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@if (TotalProducts > 1)
{
    <MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
        <MudGrid>
            @foreach (var item in DisplayedProducts)
            {
                <MudItem xs="12" sm="6" md="4">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                        <MudImage Src="@item.ProductImageURL" Width="100"></MudImage>
                        <MudText>@item.Name</MudText>
                        <MudText>@item.Description</MudText>
                        <MudText>@item.RetailPrice</MudText>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
        <MudPagination Color="Color.Primary" Count="4" @bind-Selected="@_selected" />
        <MudText Align="Align.Center">Selected page: @_selected</MudText>
        <MudForm>
      
        <MudSelect T="int" Label="Items per Page" @bind-Selected="@itemPerPageCount"  >
            <MudSelectItem T="int" Value="5"></MudSelectItem>
            <MudSelectItem T="int" Value="10"></MudSelectItem>
            <MudSelectItem T="int" Value="20"></MudSelectItem>
        </MudSelect>
        </MudForm>
    </MudContainer>
}


@code {
    private static int _selected = 1;
    private static int itemPerPageCount;
    private int pageCount;
    private int TotalProducts;
    private int skipCount = (_selected - 1) * itemPerPageCount;
    private List<Product> DisplayedProducts;
    protected async override Task OnInitializedAsync()
    {
        TotalProducts = dbContext.Products.Where(x => !x.isDeleted && !x.isVisible).Count();
        GetDisplayedProducts();
    }

    private void GetDisplayedProducts()
    {
        DisplayedProducts = dbContext.Products.Skip(skipCount).Take(itemPerPageCount).ToList();
    }

   
}
